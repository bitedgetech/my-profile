{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/newsletter/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from \"zod\";\n\nconst newsletterFormSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email address.\" }),\n});\n\nexport type NewsletterFormState = {\n  message: string;\n  success: boolean;\n};\n\nexport async function submitNewsletter(\n  prevState: NewsletterFormState,\n  formData: FormData\n): Promise<NewsletterFormState> {\n  const validatedFields = newsletterFormSchema.safeParse({\n    email: formData.get(\"email\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      message: \"Please enter a valid email address.\",\n      success: false,\n    };\n  }\n  \n  // Here you would typically integrate with an email marketing service like Mailchimp or SendGrid.\n  console.log(\"Newsletter subscription for:\", validatedFields.data.email);\n\n  return {\n    message: \"Thank you for subscribing! Please check your inbox to confirm.\",\n    success: true,\n  };\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAAsC;AAC3E;AAOO,eAAe,iBACpB,SAA8B,EAC9B,QAAkB;IAElB,MAAM,kBAAkB,qBAAqB,SAAS,CAAC;QACrD,OAAO,SAAS,GAAG,CAAC;IACtB;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,iGAAiG;IACjG,QAAQ,GAAG,CAAC,gCAAgC,gBAAgB,IAAI,CAAC,KAAK;IAEtE,OAAO;QACL,SAAS;QACT,SAAS;IACX;AACF;;;IAtBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/project-timeline-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A project timeline generation AI flow.\n *\n * - generateTimeline - A function that handles the project timeline generation process.\n * - ProjectTimelineInput - The input type for the generateTimeline function.\n * - ProjectTimelineOutput - The return type for the generateTimeline function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ProjectTimelineInputSchema = z.object({\n  projectDescription: z.string().describe('A detailed description of the project, including its goals, key features, and target audience.'),\n  platform: z.string().describe('The target platform for the project (e.g., Web, Mobile, Both).'),\n  featureComplexity: z.enum(['low', 'medium', 'high']).describe('The overall complexity of the desired features.'),\n});\nexport type ProjectTimelineInput = z.infer<typeof ProjectTimelineInputSchema>;\n\nconst PhaseSchema = z.object({\n    phaseName: z.string().describe(\"The name of the project phase (e.g., 'Discovery & Planning', 'UI/UX Design', 'Frontend Development').\"),\n    duration: z.string().describe(\"The estimated duration for this phase (e.g., '1-2 weeks', '3-4 weeks').\"),\n    description: z.string().describe(\"A brief description of the key activities and deliverables for this phase.\"),\n});\n\nconst ProjectTimelineOutputSchema = z.object({\n    totalDuration: z.string().describe(\"The total estimated duration for the entire project.\"),\n    phases: z.array(PhaseSchema).describe(\"A list of the project phases in chronological order.\"),\n});\nexport type ProjectTimelineOutput = z.infer<typeof ProjectTimelineOutputSchema>;\n\nexport async function generateTimeline(input: ProjectTimelineInput): Promise<ProjectTimelineOutput> {\n  return projectTimelineFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'projectTimelinePrompt',\n  input: {schema: ProjectTimelineInputSchema},\n  output: {schema: ProjectTimelineOutputSchema},\n  prompt: `You are a senior project manager at BitEdge Technologies. Your task is to generate a high-level project timeline based on a client's requirements.\n\nThe timeline should be broken down into logical phases (e.g., Discovery, Design, Development, Testing, Deployment). For each phase, provide an estimated duration and a brief description of the key activities.\n\nClient Requirements:\n- Project Description: {{{projectDescription}}}\n- Platform: {{{platform}}}\n- Feature Complexity: {{{featureComplexity}}}\n\nGenerate a realistic timeline. The output should be structured clearly with a total estimated duration and an array of phases. Be professional and concise. The durations should be in weeks (e.g., \"1 week\", \"2-3 weeks\").\n`,\n});\n\nconst projectTimelineFlow = ai.defineFlow(\n  {\n    name: 'projectTimelineFlow',\n    inputSchema: ProjectTimelineInputSchema,\n    outputSchema: ProjectTimelineOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,mBAAmB,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAO;QAAU;KAAO,EAAE,QAAQ,CAAC;AAChE;AAGA,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzB,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,QAAQ,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,aAAa,QAAQ,CAAC;AAC1C;AAGO,eAAe,iBAAiB,KAA2B;IAChE,OAAO,oBAAoB;AAC7B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA0B;IAC1C,QAAQ;QAAC,QAAQ;IAA2B;IAC5C,QAAQ,CAAC;;;;;;;;;;AAUX,CAAC;AACD;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACvC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA9BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/timeline-generator/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitNewsletter as '6035dd0bfd11cb3e1355fde6346f9d475c3d79d9d9'} from 'ACTIONS_MODULE0'\nexport {generateTimeline as '40a3d393922d774767f3f90781b2f4e9dbf6564b47'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/timeline-generator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/timeline-generator/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/timeline-generator/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/timeline-generator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/timeline-generator/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/timeline-generator/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}