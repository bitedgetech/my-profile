{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/ai/flows/project-estimator-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A project estimation AI flow.\n *\n * - estimateProject - A function that handles the project estimation process.\n * - ProjectEstimationInput - The input type for the estimateProject function.\n * - ProjectEstimationOutput - The return type for the estimateProject function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ProjectEstimationInputSchema = z.object({\n  platform: z.string().describe('The target platform for the project (e.g., Web, Mobile, Both).'),\n  features: z.array(z.string()).describe('A list of desired features for the project.'),\n  timeline: z.string().describe('The desired timeline for project completion (e.g., 3 months, 6 months, flexible).'),\n  budget: z.string().describe('The estimated budget for the project (e.g., <$10k, $10k-$50k, >$50k).'),\n});\nexport type ProjectEstimationInput = z.infer<typeof ProjectEstimationInputSchema>;\n\nconst ProjectEstimationOutputSchema = z.object({\n  estimatedTime: z.string().describe('A rough estimate of the project duration, e.g., \"3-4 months\".'),\n  costRange: z.string().describe('A rough estimate of the project cost, e.g., \"$25,000 - $40,000\".'),\n  suggestedStack: z.array(z.string()).describe('A list of suggested technologies for the project, e.g., [\"Next.js\", \"React Native\", \"Firebase\"].'),\n  summary: z.string().describe('A brief summary of the project scope and the rationale behind the estimate.'),\n});\nexport type ProjectEstimationOutput = z.infer<typeof ProjectEstimationOutputSchema>;\n\nexport async function estimateProject(input: ProjectEstimationInput): Promise<ProjectEstimationOutput> {\n  return projectEstimatorFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'projectEstimatorPrompt',\n  input: {schema: ProjectEstimationInputSchema},\n  output: {schema: ProjectEstimationOutputSchema},\n  prompt: `You are an expert software project manager at a digital agency called BitEdge Technologies.\nA potential client has provided the following requirements for a new project.\nYour task is to provide a rough, non-binding estimate based on these details.\n\nClient Requirements:\n- Platform: {{{platform}}}\n- Desired Features: {{#each features}}- {{{this}}} {{/each}}\n- Desired Timeline: {{{timeline}}}\n- Estimated Budget: {{{budget}}}\n\nBased on this, generate a project estimate. The cost should be in USD.\nBe realistic but optimistic. The goal is to provide a helpful preliminary estimate that encourages the client to request a more detailed, custom quote.\nThe summary should be a short paragraph.\n`,\n});\n\nconst projectEstimatorFlow = ai.defineFlow(\n  {\n    name: 'projectEstimatorFlow',\n    inputSchema: ProjectEstimationInputSchema,\n    outputSchema: ProjectEstimationOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA6BsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///E:/Bitedge%20master/src/app/project-estimator/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport Link from 'next/link';\nimport { z } from 'zod';\n\nimport { ProjectEstimationInput, ProjectEstimationOutput, estimateProject } from '@/ai/flows/project-estimator-flow';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { ArrowRight, Bot, Clock, Code, DollarSign, Loader2, Sparkles, Wand2 } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\n\nconst projectEstimationInputSchema = z.object({\n  platform: z.string({ required_error: 'Please select a platform.' }),\n  features: z.array(z.string()).min(1, \"Please select at least one feature.\"),\n  timeline: z.string({ required_error: 'Please select a timeline.' }),\n  budget: z.string({ required_error: 'Please select a budget.' }),\n});\n\n\nconst featureOptions = [\n    { id: 'auth', label: 'User Authentication (Sign up / Login)' },\n    { id: 'dashboard', label: 'User Dashboard' },\n    { id: 'payments', label: 'Payment Integration (Stripe, etc.)' },\n    { id: 'cms', label: 'Content Management System (CMS)' },\n    { id: 'social', label: 'Social Media Integration' },\n    { id: 'analytics', label: 'Analytics and Reporting' },\n    { id: 'booking', label: 'Booking/Scheduling System' },\n    { id: 'ai', label: 'AI-Powered Features' },\n];\n\nexport default function ProjectEstimatorPage() {\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState<ProjectEstimationOutput | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const { handleSubmit, control, formState: { errors } } = useForm<ProjectEstimationInput>({\n        resolver: zodResolver(projectEstimationInputSchema),\n        defaultValues: {\n            platform: 'web',\n            features: [],\n            timeline: '3-6m',\n            budget: '10k-50k',\n        }\n    });\n\n    const onSubmit = async (data: ProjectEstimationInput) => {\n        setLoading(true);\n        setResult(null);\n        setError(null);\n        try {\n            const estimation = await estimateProject(data);\n            setResult(estimation);\n        } catch (e: any) {\n            console.error(e);\n            if (e.message && e.message.includes('503')) {\n                setError('The AI model is currently overloaded. Please try again in a few moments.');\n            } else {\n                setError(e.message || 'An error occurred while generating the estimate. Please try again.');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"bg-background\">\n            <section className=\"bg-card py-20 md:py-24\">\n                <div className=\"container mx-auto px-4 text-center\">\n                    <div className=\"flex justify-center items-center gap-2 mb-2\">\n                        <Bot className=\"h-8 w-8 text-primary\" />\n                        <h1 className=\"text-4xl md:text-6xl font-bold font-headline\">AI Project Estimator</h1>\n                    </div>\n                    <p className=\"mt-4 text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto\">\n                        Answer a few questions about your project to receive a real-time, AI-generated estimate.\n                    </p>\n                </div>\n            </section>\n\n            <section className=\"py-16 md:py-24\">\n                <div className=\"container mx-auto px-4 max-w-4xl\">\n                    <Card className=\"bg-card\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <CardHeader>\n                                <CardTitle className=\"font-headline text-2xl\">Project Details</CardTitle>\n                                <CardDescription>Tell us about your project vision.</CardDescription>\n                            </CardHeader>\n                            <CardContent className=\"space-y-8\">\n                                <div className=\"space-y-4\">\n                                    <Label className=\"text-lg font-semibold\">1. What platform are you targeting?</Label>\n                                    <Controller\n                                        name=\"platform\"\n                                        control={control}\n                                        render={({ field }) => (\n                                            <RadioGroup onValueChange={field.onChange} defaultValue={field.value} className=\"flex flex-col sm:flex-row gap-4\">\n                                                <div className=\"flex items-center space-x-2\">\n                                                    <RadioGroupItem value=\"web\" id=\"web\" />\n                                                    <Label htmlFor=\"web\">Web Application</Label>\n                                                </div>\n                                                <div className=\"flex items-center space-x-2\">\n                                                    <RadioGroupItem value=\"mobile\" id=\"mobile\" />\n                                                    <Label htmlFor=\"mobile\">Mobile App (iOS & Android)</Label>\n                                                </div>\n                                                <div className=\"flex items-center space-x-2\">\n                                                    <RadioGroupItem value=\"both\" id=\"both\" />\n                                                    <Label htmlFor=\"both\">Both Web & Mobile</Label>\n                                                </div>\n                                            </RadioGroup>\n                                        )}\n                                    />\n                                </div>\n                                <Separator />\n                                <div className=\"space-y-4\">\n                                    <Label className=\"text-lg font-semibold\">2. What features do you need?</Label>\n                                    <Controller\n                                        name=\"features\"\n                                        control={control}\n                                        render={({ field }) => (\n                                            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                                                {featureOptions.map((feature) => (\n                                                    <div className=\"flex items-center gap-2\" key={feature.id}>\n                                                        <Checkbox\n                                                            id={feature.id}\n                                                            checked={field.value?.includes(feature.label)}\n                                                            onCheckedChange={(checked) => {\n                                                                const currentValue = field.value || [];\n                                                                if (checked) {\n                                                                    field.onChange([...currentValue, feature.label]);\n                                                                } else {\n                                                                    field.onChange(currentValue.filter(v => v !== feature.label));\n                                                                }\n                                                            }}\n                                                        />\n                                                        <Label htmlFor={feature.id}>{feature.label}</Label>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )}\n                                    />\n                                    {errors.features && <p className=\"text-destructive text-sm mt-2\">{errors.features.message}</p>}\n                                </div>\n                                <Separator />\n                                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8\">\n                                    <div className=\"space-y-4\">\n                                        <Label className=\"text-lg font-semibold\" htmlFor=\"timeline\">3. What's your desired timeline?</Label>\n                                         <Controller\n                                            name=\"timeline\"\n                                            control={control}\n                                            render={({ field }) => (\n                                                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                    <SelectTrigger id=\"timeline\">\n                                                        <SelectValue placeholder=\"Select timeline\" />\n                                                    </SelectTrigger>\n                                                    <SelectContent>\n                                                        <SelectItem value=\"0-3m\">Under 3 months</SelectItem>\n                                                        <SelectItem value=\"3-6m\">3-6 months</SelectItem>\n                                                        <SelectItem value=\"6-12m\">6-12 months</SelectItem>\n                                                        <SelectItem value=\"flexible\">Flexible</SelectItem>\n                                                    </SelectContent>\n                                                </Select>\n                                            )}\n                                        />\n                                    </div>\n                                    <div className=\"space-y-4\">\n                                        <Label className=\"text-lg font-semibold\" htmlFor=\"budget\">4. What's your estimated budget?</Label>\n                                         <Controller\n                                            name=\"budget\"\n                                            control={control}\n                                            render={({ field }) => (\n                                                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                    <SelectTrigger id=\"budget\">\n                                                        <SelectValue placeholder=\"Select budget\" />\n                                                    </SelectTrigger>\n                                                    <SelectContent>\n                                                        <SelectItem value=\"<10k\">Under $10,000</SelectItem>\n                                                        <SelectItem value=\"10k-50k\">$10,000 - $50,000</SelectItem>\n                                                        <SelectItem value=\"50k-100k\">$50,000 - $100,000</SelectItem>\n                                                        <SelectItem value=\">100k\">Over $100,000</SelectItem>\n                                                    </SelectContent>\n                                                </Select>\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n                            </CardContent>\n                            <CardFooter>\n                                <Button type=\"submit\" disabled={loading} size=\"lg\" className=\"w-full\">\n                                    {loading ? (\n                                        <>\n                                            <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                                            Generating Estimate...\n                                        </>\n                                    ) : (\n                                        <>\n                                            <Wand2 className=\"mr-2 h-5 w-5\" />\n                                            Generate Estimate\n                                        </>\n                                    )}\n                                </Button>\n                            </CardFooter>\n                        </form>\n                    </Card>\n\n                    {error && (\n                        <Card className=\"mt-8 text-center bg-destructive/10 border-destructive\">\n                            <CardContent className=\"p-6\">\n                               <p className=\"text-destructive font-medium\">{error}</p>\n                            </CardContent>\n                        </Card>\n                    )}\n\n                    {result && (\n                        <Card className=\"mt-8 bg-card\">\n                            <CardHeader className=\"text-center\">\n                                <div className=\"flex justify-center items-center gap-2 mb-2\">\n                                    <Sparkles className=\"h-8 w-8 text-accent\" />\n                                    <CardTitle className=\"font-headline text-3xl\">Your Project Estimate</CardTitle>\n                                </div>\n                                <CardDescription>This is a preliminary estimate based on the provided details.</CardDescription>\n                            </CardHeader>\n                            <CardContent className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\">\n                                    <div className=\"bg-background/50 p-4 rounded-lg\">\n                                        <div className=\"flex justify-center items-center gap-2 mb-2\">\n                                            <Clock className=\"h-6 w-6 text-primary\" />\n                                            <h4 className=\"font-semibold text-lg\">Estimated Time</h4>\n                                        </div>\n                                        <p className=\"text-2xl font-bold\">{result.estimatedTime}</p>\n                                    </div>\n                                    <div className=\"bg-background/50 p-4 rounded-lg\">\n                                        <div className=\"flex justify-center items-center gap-2 mb-2\">\n                                            <DollarSign className=\"h-6 w-6 text-primary\" />\n                                            <h4 className=\"font-semibold text-lg\">Cost Range (USD)</h4>\n                                        </div>\n                                        <p className=\"text-2xl font-bold\">{result.costRange}</p>\n                                    </div>\n                                    <div className=\"bg-background/50 p-4 rounded-lg\">\n                                        <div className=\"flex justify-center items-center gap-2 mb-2\">\n                                            <Code className=\"h-6 w-6 text-primary\" />\n                                            <h4 className=\"font-semibold text-lg\">Suggested Stack</h4>\n                                        </div>\n                                        <p className=\"text-lg font-medium\">{result.suggestedStack.join(', ')}</p>\n                                    </div>\n                                </div>\n                                <Separator />\n                                <div className=\"space-y-2\">\n                                    <h4 className=\"font-semibold text-lg\">Project Summary</h4>\n                                    <p className=\"text-muted-foreground\">{result.summary}</p>\n                                </div>\n                            </CardContent>\n                            <CardFooter className=\"flex-col gap-4\">\n                                <p className=\"text-sm text-muted-foreground text-center\">Ready to take the next step?</p>\n                                <Button asChild size=\"lg\">\n                                    <Link href=\"/contact\">Get a Custom Quote <ArrowRight className=\"ml-2 h-5 w-5\" /></Link>\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                    )}\n                </div>\n            </section>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}