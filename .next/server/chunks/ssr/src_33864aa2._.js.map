{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/project-timeline-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A project timeline generation AI flow.\n *\n * - generateTimeline - A function that handles the project timeline generation process.\n * - ProjectTimelineInput - The input type for the generateTimeline function.\n * - ProjectTimelineOutput - The return type for the generateTimeline function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ProjectTimelineInputSchema = z.object({\n  projectDescription: z.string().describe('A detailed description of the project, including its goals, key features, and target audience.'),\n  platform: z.string().describe('The target platform for the project (e.g., Web, Mobile, Both).'),\n  featureComplexity: z.enum(['low', 'medium', 'high']).describe('The overall complexity of the desired features.'),\n});\nexport type ProjectTimelineInput = z.infer<typeof ProjectTimelineInputSchema>;\n\nconst PhaseSchema = z.object({\n    phaseName: z.string().describe(\"The name of the project phase (e.g., 'Discovery & Planning', 'UI/UX Design', 'Frontend Development').\"),\n    duration: z.string().describe(\"The estimated duration for this phase (e.g., '1-2 weeks', '3-4 weeks').\"),\n    description: z.string().describe(\"A brief description of the key activities and deliverables for this phase.\"),\n});\n\nconst ProjectTimelineOutputSchema = z.object({\n    totalDuration: z.string().describe(\"The total estimated duration for the entire project.\"),\n    phases: z.array(PhaseSchema).describe(\"A list of the project phases in chronological order.\"),\n});\nexport type ProjectTimelineOutput = z.infer<typeof ProjectTimelineOutputSchema>;\n\nexport async function generateTimeline(input: ProjectTimelineInput): Promise<ProjectTimelineOutput> {\n  return projectTimelineFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'projectTimelinePrompt',\n  input: {schema: ProjectTimelineInputSchema},\n  output: {schema: ProjectTimelineOutputSchema},\n  prompt: `You are a senior project manager at BitEdge Technologies. Your task is to generate a high-level project timeline based on a client's requirements.\n\nThe timeline should be broken down into logical phases (e.g., Discovery, Design, Development, Testing, Deployment). For each phase, provide an estimated duration and a brief description of the key activities.\n\nClient Requirements:\n- Project Description: {{{projectDescription}}}\n- Platform: {{{platform}}}\n- Feature Complexity: {{{featureComplexity}}}\n\nGenerate a realistic timeline. The output should be structured clearly with a total estimated duration and an array of phases. Be professional and concise. The durations should be in weeks (e.g., \"1 week\", \"2-3 weeks\").\n`,\n});\n\nconst projectTimelineFlow = ai.defineFlow(\n  {\n    name: 'projectTimelineFlow',\n    inputSchema: ProjectTimelineInputSchema,\n    outputSchema: ProjectTimelineOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAgCsB,mBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/timeline-generator/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { generateTimeline, ProjectTimelineInput, ProjectTimelineOutput } from '@/ai/flows/project-timeline-flow';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Label } from '@/components/ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Textarea } from '@/components/ui/textarea';\nimport { CalendarClock, GanttChartSquare, GitCommit, Loader2, Milestone, Sparkles } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\n\nconst ProjectTimelineInputSchema = z.object({\n  projectDescription: z.string().min(20, \"Please provide a more detailed description (at least 20 characters).\"),\n  platform: z.string(),\n  featureComplexity: z.enum(['low', 'medium', 'high']),\n});\n\n\nexport default function TimelineGeneratorPage() {\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState<ProjectTimelineOutput | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const { register, handleSubmit, control, formState: { errors } } = useForm<ProjectTimelineInput>({\n        resolver: zodResolver(ProjectTimelineInputSchema),\n        defaultValues: {\n            projectDescription: '',\n            platform: 'web',\n            featureComplexity: 'medium',\n        }\n    });\n\n    const onSubmit = async (data: ProjectTimelineInput) => {\n        setLoading(true);\n        setResult(null);\n        setError(null);\n        try {\n            const timeline = await generateTimeline(data);\n            setResult(timeline);\n        } catch (e: any) {\n            console.error(e);\n            if (e.message && e.message.includes('503')) {\n                setError('The AI model is currently overloaded. Please try again in a few moments.');\n            } else {\n                setError('An error occurred while generating the timeline. Please try again.');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"bg-background\">\n            <section className=\"bg-card py-20 md:py-24\">\n                <div className=\"container mx-auto px-4 text-center\">\n                    <div className=\"flex justify-center items-center gap-2 mb-2\">\n                        <GanttChartSquare className=\"h-8 w-8 text-primary\" />\n                        <h1 className=\"text-4xl md:text-6xl font-bold font-headline\">AI Project Timeline Generator</h1>\n                    </div>\n                    <p className=\"mt-4 text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto\">\n                        Describe your project, and our AI will generate a high-level delivery timeline with key phases.\n                    </p>\n                </div>\n            </section>\n\n            <section className=\"py-16 md:py-24\">\n                <div className=\"container mx-auto px-4 max-w-4xl\">\n                    <Card className=\"bg-card\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <CardHeader>\n                                <CardTitle className=\"font-headline text-2xl\">Project Overview</CardTitle>\n                                <CardDescription>Provide details about your project to generate a timeline.</CardDescription>\n                            </CardHeader>\n                            <CardContent className=\"space-y-8\">\n                                <div className=\"space-y-4\">\n                                    <Label className=\"text-lg font-semibold\" htmlFor=\"projectDescription\">1. Describe your project</Label>\n                                    <Textarea\n                                        id=\"projectDescription\"\n                                        placeholder=\"e.g., A mobile app for booking fitness classes, with user profiles, payments, and a class schedule...\"\n                                        rows={6}\n                                        {...register('projectDescription')}\n                                    />\n                                    {errors.projectDescription && <p className=\"text-destructive text-sm\">{errors.projectDescription.message}</p>}\n                                </div>\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                                    <div className=\"space-y-4\">\n                                        <Label className=\"text-lg font-semibold\">2. Platform</Label>\n                                        <Controller\n                                            name=\"platform\"\n                                            control={control}\n                                            render={({ field }) => (\n                                                <RadioGroup onValueChange={field.onChange} defaultValue={field.value} className=\"flex flex-col gap-2\">\n                                                    <div className=\"flex items-center space-x-2\"><RadioGroupItem value=\"web\" id=\"web\" /><Label htmlFor=\"web\">Web Application</Label></div>\n                                                    <div className=\"flex items-center space-x-2\"><RadioGroupItem value=\"mobile\" id=\"mobile\" /><Label htmlFor=\"mobile\">Mobile App</Label></div>\n                                                    <div className=\"flex items-center space-x-2\"><RadioGroupItem value=\"both\" id=\"both\" /><Label htmlFor=\"both\">Both Web & Mobile</Label></div>\n                                                </RadioGroup>\n                                            )}\n                                        />\n                                    </div>\n                                    <div className=\"space-y-4\">\n                                        <Label className=\"text-lg font-semibold\">3. Feature Complexity</Label>\n                                        <Controller\n                                            name=\"featureComplexity\"\n                                            control={control}\n                                            render={({ field }) => (\n                                                <RadioGroup onValueChange={field.onChange} defaultValue={field.value} className=\"flex flex-col gap-2\">\n                                                    <div className=\"flex items-center space-x-2\"><RadioGroupItem value=\"low\" id=\"low\" /><Label htmlFor=\"low\">Low (Basic features)</Label></div>\n                                                    <div className=\"flex items-center space-x-2\"><RadioGroupItem value=\"medium\" id=\"medium\" /><Label htmlFor=\"medium\">Medium (Standard features)</Label></div>\n                                                    <div className=\"flex items-center space-x-2\"><RadioGroupItem value=\"high\" id=\"high\" /><Label htmlFor=\"high\">High (Complex features, integrations)</Label></div>\n                                                </RadioGroup>\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n                            </CardContent>\n                            <CardFooter>\n                                <Button type=\"submit\" disabled={loading} size=\"lg\" className=\"w-full\">\n                                    {loading ? ( <><Loader2 className=\"mr-2 h-5 w-5 animate-spin\" /> Generating Timeline...</> ) \n                                    : ( <><GanttChartSquare className=\"mr-2 h-5 w-5\" /> Generate Timeline</>)}\n                                </Button>\n                            </CardFooter>\n                        </form>\n                    </Card>\n\n                     {error && (\n                        <Card className=\"mt-8 text-center bg-destructive/10 border-destructive\">\n                            <CardContent className=\"p-6\">\n                               <p className=\"text-destructive font-medium\">{error}</p>\n                            </CardContent>\n                        </Card>\n                    )}\n\n                    {result && (\n                        <Card className=\"mt-8 bg-card\">\n                            <CardHeader className=\"text-center\">\n                                <div className=\"flex justify-center items-center gap-2 mb-2\">\n                                    <Sparkles className=\"h-8 w-8 text-accent\" />\n                                    <CardTitle className=\"font-headline text-3xl\">Generated Project Timeline</CardTitle>\n                                </div>\n                                <CardDescription>This is a high-level, estimated timeline based on your inputs.</CardDescription>\n                            </CardHeader>\n                            <CardContent className=\"space-y-6\">\n                                <div className=\"text-center bg-background/50 p-4 rounded-lg\">\n                                    <h4 className=\"font-semibold text-lg text-primary\">Total Estimated Duration</h4>\n                                    <p className=\"text-3xl font-bold\">{result.totalDuration}</p>\n                                </div>\n                                <Separator />\n                                <div className=\"relative pl-6 space-y-8 before:absolute before:inset-y-0 before:w-px before:bg-border before:left-0\">\n                                    {result.phases.map((phase, index) => (\n                                        <div key={index} className=\"relative\">\n                                            <div className=\"absolute -left-[37px] top-1 flex h-8 w-8 items-center justify-center rounded-full bg-primary text-primary-foreground\">\n                                                <Milestone className=\"h-5 w-5\" />\n                                            </div>\n                                            <div className=\"pl-6\">\n                                                <div className=\"flex justify-between items-center\">\n                                                    <h4 className=\"font-headline text-xl\">{phase.phaseName}</h4>\n                                                    <div className=\"font-semibold text-primary\">{phase.duration}</div>\n                                                </div>\n                                                <p className=\"text-muted-foreground mt-1\">{phase.description}</p>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </CardContent>\n                            <CardFooter>\n                                 <p className=\"text-sm text-muted-foreground text-center w-full\">Note: This AI-generated timeline is for preliminary planning. For a detailed, fixed-quote proposal, please contact us.</p>\n                            </CardFooter>\n                        </Card>\n                    )}\n                </div>\n            </section>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}