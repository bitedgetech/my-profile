{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/idea-validator-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI flow for validating startup ideas.\n *\n * - validateIdea - A function that handles the idea validation process.\n * - IdeaValidatorInput - The input type for the validateIdea function.\n * - IdeaValidatorOutput - The return type for the validateIdea function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst IdeaValidatorInputSchema = z.object({\n  ideaDescription: z.string().min(50, \"Please provide a more detailed description of your idea (at least 50 characters).\").describe('A detailed description of the startup or app idea.'),\n});\nexport type IdeaValidatorInput = z.infer<typeof IdeaValidatorInputSchema>;\n\nconst IdeaValidatorOutputSchema = z.object({\n  feasibilityScore: z.number().min(1).max(10).describe('A score from 1-10 indicating the idea\\'s feasibility.'),\n  feasibilityAnalysis: z.string().describe('A brief analysis explaining the feasibility score, including potential strengths and challenges.'),\n  suggestedStack: z.array(z.string()).describe('A list of suggested technologies for building the MVP, e.g., [\"Next.js\", \"Firebase\", \"Stripe\"].'),\n  estimatedMvpCost: z.string().describe('A rough, non-binding estimate of the Minimum Viable Product (MVP) cost in USD, e.g., \"$15,000 - $30,000\".'),\n  nextSteps: z.string().describe('A few actionable next steps the user should consider.'),\n});\nexport type IdeaValidatorOutput = z.infer<typeof IdeaValidatorOutputSchema>;\n\nexport async function validateIdea(input: IdeaValidatorInput): Promise<IdeaValidatorOutput> {\n  return ideaValidatorFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'ideaValidatorPrompt',\n  input: {schema: IdeaValidatorInputSchema},\n  output: {schema: IdeaValidatorOutputSchema},\n  prompt: `You are an experienced startup advisor and CTO at BitEdge Technologies. A potential founder has submitted their idea for validation.\nYour task is to provide a realistic, constructive, and encouraging analysis.\n\n**Idea Description:**\n\"{{{ideaDescription}}}\"\n\n**Your Analysis Should Include:**\n\n1.  **Feasibility Score (1-10):** Give a score based on technical difficulty, market potential, and potential competition. A higher score means more feasible.\n2.  **Feasibility Analysis:** Briefly justify your score. Mention 1-2 potential strengths and 1-2 potential hurdles or questions they should consider.\n3.  **Suggested Tech Stack:** Recommend a modern, practical tech stack for building the MVP. Favor technologies like Next.js, Firebase, React Native, and other common, scalable tools.\n4.  **Estimated MVP Cost:** Provide a rough, non-binding cost range in USD for an initial MVP. Base this on the complexity implied by the idea.\n5.  **Actionable Next Steps:** Suggest 2-3 concrete next steps. This should guide them towards refining their idea and potentially working with a company like BitEdge. Examples: \"Define your target user persona,\" or \"Create a simple landing page to gauge interest.\"\n\nYour tone should be professional, knowledgeable, and supportive. The goal is to provide genuine value and position BitEdge as a capable partner.\n`,\n});\n\nconst ideaValidatorFlow = ai.defineFlow(\n  {\n    name: 'ideaValidatorFlow',\n    inputSchema: IdeaValidatorInputSchema,\n    outputSchema: IdeaValidatorOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA2BsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/idea-validator/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { IdeaValidatorInput, IdeaValidatorOutput, validateIdea } from '@/ai/flows/idea-validator-flow';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Lightbulb, Loader2, Sparkles, CheckCircle, Code, DollarSign, ArrowRight } from 'lucide-react';\nimport Link from 'next/link';\n\nconst IdeaValidatorInputSchema = z.object({\n  ideaDescription: z.string().min(50, \"Please provide a more detailed description of your idea (at least 50 characters).\"),\n});\n\n\nexport default function IdeaValidatorPage() {\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState<IdeaValidatorOutput | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const { register, handleSubmit, formState: { errors } } = useForm<IdeaValidatorInput>({\n        resolver: zodResolver(IdeaValidatorInputSchema),\n    });\n\n    const onSubmit = async (data: IdeaValidatorInput) => {\n        setLoading(true);\n        setResult(null);\n        setError(null);\n        try {\n            const validationResult = await validateIdea(data);\n            setResult(validationResult);\n        } catch (e: any) {\n            console.error(e);\n            if (e.message && e.message.includes('503')) {\n                setError('The AI model is currently overloaded. Please try again in a few moments.');\n            } else {\n                setError(e.message || 'An error occurred while validating your idea. Please try again.');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"bg-background\">\n            <section className=\"bg-card py-20 md:py-24\">\n                <div className=\"container mx-auto px-4 text-center\">\n                    <div className=\"flex justify-center items-center gap-2 mb-2\">\n                        <Lightbulb className=\"h-8 w-8 text-primary\" />\n                        <h1 className=\"text-4xl md:text-6xl font-bold font-headline\">Startup Idea Validator</h1>\n                    </div>\n                    <p className=\"mt-4 text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto\">\n                        Have a startup idea? Get instant, AI-powered feedback on its feasibility, potential tech stack, and estimated MVP cost.\n                    </p>\n                </div>\n            </section>\n\n            <section className=\"py-16 md:py-24\">\n                <div className=\"container mx-auto px-4 max-w-4xl\">\n                    <Card className=\"bg-card\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <CardHeader>\n                                <CardTitle className=\"font-headline text-2xl\">Describe Your Idea</CardTitle>\n                                <CardDescription>The more detail you provide, the better the analysis will be. Tell us about the problem you're solving and your proposed solution.</CardDescription>\n                            </CardHeader>\n                            <CardContent>\n                                <div className=\"space-y-2\">\n                                    <Label htmlFor=\"ideaDescription\" className=\"sr-only\">Your Idea Description</Label>\n                                    <Textarea\n                                        id=\"ideaDescription\"\n                                        placeholder=\"e.g., A social media platform for pet owners to share photos and organize playdates. It would include user profiles, a photo feed, event creation, and direct messaging...\"\n                                        rows={8}\n                                        {...register('ideaDescription')}\n                                    />\n                                    {errors.ideaDescription && <p className=\"text-destructive text-sm mt-2\">{errors.ideaDescription.message}</p>}\n                                </div>\n                            </CardContent>\n                            <CardFooter>\n                                <Button type=\"submit\" disabled={loading} size=\"lg\" className=\"w-full\">\n                                    {loading ? (\n                                        <>\n                                            <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                                            Analyzing...\n                                        </>\n                                    ) : (\n                                        <>\n                                            <Sparkles className=\"mr-2 h-5 w-5\" />\n                                            Validate My Idea\n                                        </>\n                                    )}\n                                </Button>\n                            </CardFooter>\n                        </form>\n                    </Card>\n\n                    {error && (\n                        <Card className=\"mt-8 text-center bg-destructive/10 border-destructive\">\n                            <CardContent className=\"p-6\">\n                               <p className=\"text-destructive font-medium\">{error}</p>\n                            </CardContent>\n                        </Card>\n                    )}\n\n                    {result && (\n                        <Card className=\"mt-8 bg-card\">\n                            <CardHeader className=\"text-center\">\n                                <CardTitle className=\"font-headline text-3xl\">AI Feasibility Report</CardTitle>\n                                <CardDescription>Here's a preliminary analysis of your startup idea.</CardDescription>\n                            </CardHeader>\n                            <CardContent className=\"space-y-8\">\n                                <div className=\"text-center bg-background/50 p-6 rounded-lg\">\n                                    <h4 className=\"font-semibold text-lg text-primary\">Feasibility Score</h4>\n                                    <p className=\"text-6xl font-bold\">{result.feasibilityScore}<span className=\"text-3xl text-muted-foreground\">/10</span></p>\n                                    <p className=\"text-muted-foreground mt-2\">{result.feasibilityAnalysis}</p>\n                                </div>\n                                \n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                     <div className=\"bg-background/50 p-4 rounded-lg\">\n                                        <h4 className=\"font-semibold text-lg mb-2 flex items-center gap-2\"><Code className=\"h-6 w-6 text-primary\" />Suggested Tech Stack</h4>\n                                        <p className=\"text-muted-foreground\">{result.suggestedStack.join(', ')}</p>\n                                    </div>\n                                    <div className=\"bg-background/50 p-4 rounded-lg\">\n                                        <h4 className=\"font-semibold text-lg mb-2 flex items-center gap-2\"><DollarSign className=\"h-6 w-6 text-primary\" />Estimated MVP Cost</h4>\n                                        <p className=\"text-muted-foreground\">{result.estimatedMvpCost}</p>\n                                    </div>\n                                </div>\n                               \n                                <div>\n                                    <h4 className=\"font-semibold text-lg mb-2 flex items-center gap-2\"><CheckCircle className=\"h-6 w-6 text-primary\" />Recommended Next Steps</h4>\n                                    <p className=\"text-muted-foreground whitespace-pre-wrap\">{result.nextSteps}</p>\n                                </div>\n                            </CardContent>\n                            <CardFooter className=\"flex-col gap-4\">\n                                <p className=\"text-sm text-muted-foreground text-center\">This report is AI-generated. Ready for a human touch?</p>\n                                <Button asChild size=\"lg\">\n                                    <Link href=\"/contact\">Book a Free Consultation <ArrowRight className=\"ml-2 h-5 w-5\" /></Link>\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                    )}\n                </div>\n            </section>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}