{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/newsletter/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from \"zod\";\n\nconst newsletterFormSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email address.\" }),\n});\n\nexport type NewsletterFormState = {\n  message: string;\n  success: boolean;\n};\n\nexport async function submitNewsletter(\n  prevState: NewsletterFormState,\n  formData: FormData\n): Promise<NewsletterFormState> {\n  const validatedFields = newsletterFormSchema.safeParse({\n    email: formData.get(\"email\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      message: \"Please enter a valid email address.\",\n      success: false,\n    };\n  }\n  \n  // Here you would typically integrate with an email marketing service like Mailchimp or SendGrid.\n  console.log(\"Newsletter subscription for:\", validatedFields.data.email);\n\n  return {\n    message: \"Thank you for subscribing! Please check your inbox to confirm.\",\n    success: true,\n  };\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAAsC;AAC3E;AAOO,eAAe,iBACpB,SAA8B,EAC9B,QAAkB;IAElB,MAAM,kBAAkB,qBAAqB,SAAS,CAAC;QACrD,OAAO,SAAS,GAAG,CAAC;IACtB;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,iGAAiG;IACjG,QAAQ,GAAG,CAAC,gCAAgC,gBAAgB,IAAI,CAAC,KAAK;IAEtE,OAAO;QACL,SAAS;QACT,SAAS;IACX;AACF;;;IAtBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/idea-validator-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI flow for validating startup ideas.\n *\n * - validateIdea - A function that handles the idea validation process.\n * - IdeaValidatorInput - The input type for the validateIdea function.\n * - IdeaValidatorOutput - The return type for the validateIdea function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst IdeaValidatorInputSchema = z.object({\n  ideaDescription: z.string().min(50, \"Please provide a more detailed description of your idea (at least 50 characters).\").describe('A detailed description of the startup or app idea.'),\n});\nexport type IdeaValidatorInput = z.infer<typeof IdeaValidatorInputSchema>;\n\nconst IdeaValidatorOutputSchema = z.object({\n  feasibilityScore: z.number().min(1).max(10).describe('A score from 1-10 indicating the idea\\'s feasibility.'),\n  feasibilityAnalysis: z.string().describe('A brief analysis explaining the feasibility score, including potential strengths and challenges.'),\n  suggestedStack: z.array(z.string()).describe('A list of suggested technologies for building the MVP, e.g., [\"Next.js\", \"Firebase\", \"Stripe\"].'),\n  estimatedMvpCost: z.string().describe('A rough, non-binding estimate of the Minimum Viable Product (MVP) cost in USD, e.g., \"$15,000 - $30,000\".'),\n  nextSteps: z.string().describe('A few actionable next steps the user should consider.'),\n});\nexport type IdeaValidatorOutput = z.infer<typeof IdeaValidatorOutputSchema>;\n\nexport async function validateIdea(input: IdeaValidatorInput): Promise<IdeaValidatorOutput> {\n  return ideaValidatorFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'ideaValidatorPrompt',\n  input: {schema: IdeaValidatorInputSchema},\n  output: {schema: IdeaValidatorOutputSchema},\n  prompt: `You are an experienced startup advisor and CTO at BitEdge Technologies. A potential founder has submitted their idea for validation.\nYour task is to provide a realistic, constructive, and encouraging analysis.\n\n**Idea Description:**\n\"{{{ideaDescription}}}\"\n\n**Your Analysis Should Include:**\n\n1.  **Feasibility Score (1-10):** Give a score based on technical difficulty, market potential, and potential competition. A higher score means more feasible.\n2.  **Feasibility Analysis:** Briefly justify your score. Mention 1-2 potential strengths and 1-2 potential hurdles or questions they should consider.\n3.  **Suggested Tech Stack:** Recommend a modern, practical tech stack for building the MVP. Favor technologies like Next.js, Firebase, React Native, and other common, scalable tools.\n4.  **Estimated MVP Cost:** Provide a rough, non-binding cost range in USD for an initial MVP. Base this on the complexity implied by the idea.\n5.  **Actionable Next Steps:** Suggest 2-3 concrete next steps. This should guide them towards refining their idea and potentially working with a company like BitEdge. Examples: \"Define your target user persona,\" or \"Create a simple landing page to gauge interest.\"\n\nYour tone should be professional, knowledgeable, and supportive. The goal is to provide genuine value and position BitEdge as a capable partner.\n`,\n});\n\nconst ideaValidatorFlow = ai.defineFlow(\n  {\n    name: 'ideaValidatorFlow',\n    inputSchema: IdeaValidatorInputSchema,\n    outputSchema: IdeaValidatorOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,qFAAqF,QAAQ,CAAC;AACpI;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,QAAQ,CAAC;IACrD,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAC7C,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACtC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGO,eAAe,aAAa,KAAyB;IAC1D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;;;;;;;;AAeX,CAAC;AACD;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/idea-validator/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitNewsletter as '6035dd0bfd11cb3e1355fde6346f9d475c3d79d9d9'} from 'ACTIONS_MODULE0'\nexport {validateIdea as '40355f9f19aa8396e8beb04dcb414c51e0d8007f93'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/idea-validator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/idea-validator/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/idea-validator/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/idea-validator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/idea-validator/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/idea-validator/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}