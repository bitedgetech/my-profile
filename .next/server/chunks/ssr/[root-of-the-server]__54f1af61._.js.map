{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/newsletter/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from \"zod\";\n\nconst newsletterFormSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email address.\" }),\n});\n\nexport type NewsletterFormState = {\n  message: string;\n  success: boolean;\n};\n\nexport async function submitNewsletter(\n  prevState: NewsletterFormState,\n  formData: FormData\n): Promise<NewsletterFormState> {\n  const validatedFields = newsletterFormSchema.safeParse({\n    email: formData.get(\"email\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      message: \"Please enter a valid email address.\",\n      success: false,\n    };\n  }\n  \n  // Here you would typically integrate with an email marketing service like Mailchimp or SendGrid.\n  console.log(\"Newsletter subscription for:\", validatedFields.data.email);\n\n  return {\n    message: \"Thank you for subscribing! Please check your inbox to confirm.\",\n    success: true,\n  };\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAAsC;AAC3E;AAOO,eAAe,iBACpB,SAA8B,EAC9B,QAAkB;IAElB,MAAM,kBAAkB,qBAAqB,SAAS,CAAC;QACrD,OAAO,SAAS,GAAG,CAAC;IACtB;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,iGAAiG;IACjG,QAAQ,GAAG,CAAC,gCAAgC,gBAAgB,IAAI,CAAC,KAAK;IAEtE,OAAO;QACL,SAAS;QACT,SAAS;IACX;AACF;;;IAtBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/project-estimator-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A project estimation AI flow.\n *\n * - estimateProject - A function that handles the project estimation process.\n * - ProjectEstimationInput - The input type for the estimateProject function.\n * - ProjectEstimationOutput - The return type for the estimateProject function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ProjectEstimationInputSchema = z.object({\n  platform: z.string().describe('The target platform for the project (e.g., Web, Mobile, Both).'),\n  features: z.array(z.string()).describe('A list of desired features for the project.'),\n  timeline: z.string().describe('The desired timeline for project completion (e.g., 3 months, 6 months, flexible).'),\n  budget: z.string().describe('The estimated budget for the project (e.g., <$10k, $10k-$50k, >$50k).'),\n});\nexport type ProjectEstimationInput = z.infer<typeof ProjectEstimationInputSchema>;\n\nconst ProjectEstimationOutputSchema = z.object({\n  estimatedTime: z.string().describe('A rough estimate of the project duration, e.g., \"3-4 months\".'),\n  costRange: z.string().describe('A rough estimate of the project cost, e.g., \"$25,000 - $40,000\".'),\n  suggestedStack: z.array(z.string()).describe('A list of suggested technologies for the project, e.g., [\"Next.js\", \"React Native\", \"Firebase\"].'),\n  summary: z.string().describe('A brief summary of the project scope and the rationale behind the estimate.'),\n});\nexport type ProjectEstimationOutput = z.infer<typeof ProjectEstimationOutputSchema>;\n\nexport async function estimateProject(input: ProjectEstimationInput): Promise<ProjectEstimationOutput> {\n  return projectEstimatorFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'projectEstimatorPrompt',\n  input: {schema: ProjectEstimationInputSchema},\n  output: {schema: ProjectEstimationOutputSchema},\n  prompt: `You are an expert software project manager at a digital agency called BitEdge Technologies.\nA potential client has provided the following requirements for a new project.\nYour task is to provide a rough, non-binding estimate based on these details.\n\nClient Requirements:\n- Platform: {{{platform}}}\n- Desired Features: {{#each features}}- {{{this}}} {{/each}}\n- Desired Timeline: {{{timeline}}}\n- Estimated Budget: {{{budget}}}\n\nBased on this, generate a project estimate. The cost should be in USD.\nBe realistic but optimistic. The goal is to provide a helpful preliminary estimate that encourages the client to request a more detailed, custom quote.\nThe summary should be a short paragraph.\n`,\n});\n\nconst projectEstimatorFlow = ai.defineFlow(\n  {\n    name: 'projectEstimatorFlow',\n    inputSchema: ProjectEstimationInputSchema,\n    outputSchema: ProjectEstimationOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IACvC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAC7C,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,gBAAgB,KAA6B;IACjE,OAAO,qBAAqB;AAC9B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;;;;;;;;;;;;AAaX,CAAC;AACD;AAEA,MAAM,uBAAuB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAjCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/project-estimator/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitNewsletter as '6035dd0bfd11cb3e1355fde6346f9d475c3d79d9d9'} from 'ACTIONS_MODULE0'\nexport {estimateProject as '40c7490f3bade226e26d2e9dfac4b652faf3b10082'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/project-estimator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/project-estimator/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/project-estimator/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/project-estimator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/project-estimator/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/project-estimator/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}